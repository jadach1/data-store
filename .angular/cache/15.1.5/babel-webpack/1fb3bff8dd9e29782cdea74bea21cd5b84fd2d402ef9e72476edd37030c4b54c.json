{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../app/service/heroes.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/router\";\nfunction AppComponent_ul_3_ul_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ul\")(1, \"li\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const skill_r3 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(skill_r3);\n  }\n}\nfunction AppComponent_ul_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ul\")(1, \"ul\")(2, \"li\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(4, AppComponent_ul_3_ul_4_Template, 3, 1, \"ul\", 0);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const hero_r1 = ctx.$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate3(\"\", hero_r1.name, \" , \", hero_r1.height, \", \", hero_r1.origin, \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", hero_r1.skills);\n  }\n}\nexport class AppComponent {\n  constructor(heroService) {\n    this.heroService = heroService;\n    this.heroes = [{\n      name: \"larry\",\n      height: \"180\",\n      origin: \"Canada\",\n      skills: ['Strength']\n    }, {\n      name: \"Kiegan\",\n      height: \"201\",\n      origin: \"England\",\n      skills: ['Speed']\n    }];\n    this.status = this.heroService.status.subscribe(string => alert(string));\n    this.subscription = this.heroService.heroesUpdated.subscribe(newHeroes => {\n      this.heroes = newHeroes, console.log(newHeroes);\n    }, err => console.log(\"error updating heroes\", () => console.log(\"done with updating heroes\")));\n    console.log(\"app comp init\");\n  }\n  ngOnInit() {\n    // We created 1 hero in Service which is loaded before this component.  So we concat\n    this.heroService.getHeroes();\n    // Add the heroes we have statically coded here\n    this.heroService.addHeroes(this.heroes);\n    console.log(\"initiate App comp\");\n  }\n  ngOnDestroy() {\n    console.log(\"destroyed app component\");\n  }\n}\nAppComponent.ɵfac = function AppComponent_Factory(t) {\n  return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.HeroesService));\n};\nAppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AppComponent,\n  selectors: [[\"app-root\"]],\n  decls: 9,\n  vars: 1,\n  consts: [[4, \"ngFor\", \"ngForOf\"], [\"routerLink\", \"add\"], [\"routerLink\", \"display\"]],\n  template: function AppComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\")(1, \"h1\");\n      i0.ɵɵtext(2, \"HEROES 2\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(3, AppComponent_ul_3_Template, 5, 4, \"ul\", 0);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"button\", 1);\n      i0.ɵɵtext(5, \"add hero\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"button\", 2);\n      i0.ɵɵtext(7, \"heroes\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(8, \"router-outlet\");\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngForOf\", ctx.heroes);\n    }\n  },\n  dependencies: [i2.NgForOf, i3.RouterOutlet, i3.RouterLink],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;;IAKMA,0BAAsC;IAC9BA,YAAS;IAAAA,iBAAK;;;;IAAdA,eAAS;IAATA,8BAAS;;;;;IAJrBA,0BAAgC;IAExBA,YAAgD;IAAAA,iBAAK;IACzDA,gEAEK;IACPA,iBAAK;;;;IAJCA,eAAgD;IAAhDA,wFAAgD;IAC9BA,eAAc;IAAdA,wCAAc;;;ACK1C,OAAM,MAAOC,YAAY;EACvBC,YAAoBC,WAA0B;IAA1B,gBAAW,GAAXA,WAAW;IAE/B,WAAM,GAAW,CACC;MAACC,IAAI,EAAC,OAAO;MAAEC,MAAM,EAAG,KAAK;MAAEC,MAAM,EAAC,QAAQ;MAAEC,MAAM,EAAC,CAAC,UAAU;IAAC,CAAE,EACrE;MAACH,IAAI,EAAE,QAAQ;MAAEC,MAAM,EAAE,KAAK;MAAEC,MAAM,EAAC,SAAS;MAAEC,MAAM,EAAC,CAAC,OAAO;IAAC,CAAC,CACpE;IAEnB,WAAM,GAAiB,IAAI,CAACJ,WAAW,CAACK,MAAM,CAACC,SAAS,CAAEC,MAAM,IAAIC,KAAK,CAACD,MAAM,CAAC,CAAC;IAClF,iBAAY,GAAiB,IAAI,CAACP,WAAW,CAACS,aAAa,CAACH,SAAS,CAC/DI,SAAS,IAAG;MAAE,IAAI,CAACC,MAAM,GAAGD,SAAS,EAAEE,OAAO,CAACC,GAAG,CAACH,SAAS,CAAC;IAAA,CAAC,EAC9DI,GAAG,IAAIF,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAC1C,MAAMD,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC,CAAC,CAAC;IAXJD,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC;EAAA;EAa5EE,QAAQ;IACR;IACE,IAAI,CAACf,WAAW,CAACgB,SAAS,EAAE;IAC9B;IACC,IAAI,CAAChB,WAAW,CAACiB,SAAS,CAAC,IAAI,CAACN,MAAM,CAAC;IACvCC,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC;EACnC;EAEEK,WAAW;IACTN,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAC;EAC1C;;AAxBaf,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;QAAZA,YAAY;EAAAqB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDVzB1B,2BAAK;MACCA,wBAAQ;MAAAA,iBAAK;MACjBA,2DAOK;MACPA,iBAAM;MACNA,iCAAyB;MAAAA,wBAAQ;MAAAA,iBAAS;MAC1CA,iCAA6B;MAAAA,sBAAM;MAAAA,iBAAS;MAC5CA,gCAA+B;;;MAXRA,eAAS;MAATA,oCAAS","names":["i0","AppComponent","constructor","heroService","name","height","origin","skills","status","subscribe","string","alert","heroesUpdated","newHeroes","heroes","console","log","err","ngOnInit","getHeroes","addHeroes","ngOnDestroy","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\jacob\\Desktop\\developmentProjects\\angularTest\\data-store\\src\\app\\app.component.html","C:\\Users\\jacob\\Desktop\\developmentProjects\\angularTest\\data-store\\src\\app\\app.component.ts"],"sourcesContent":["<div>\n  <h1>HEROES 2</h1>\n  <ul *ngFor=\"let hero of heroes\">\n    <ul>\n      <li>{{hero.name}} , {{hero.height}}, {{hero.origin}}</li>\n      <ul *ngFor=\"let skill of hero.skills\">\n          <li>{{skill}}</li>\n      </ul>\n    </ul>\n  </ul>\n</div>\n<button routerLink=\"add\">add hero</button>\n<button routerLink=\"display\">heroes</button>\n<router-outlet></router-outlet>\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport {Hero} from '../app/Models/hero'\nimport { Subscription } from 'rxjs';\nimport { HeroesService } from '../app/service/heroes.service'\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit, OnDestroy {\n  constructor(private heroService: HeroesService){console.log(\"app comp init\")}\n  \n  heroes: Hero[] = [\n                    {name:\"larry\", height : \"180\", origin:\"Canada\", skills:['Strength'] },\n                    {name: \"Kiegan\", height: \"201\", origin:\"England\", skills:['Speed']}\n                  ];\n\nstatus: Subscription = this.heroService.status.subscribe( string => alert(string))\nsubscription: Subscription = this.heroService.heroesUpdated.subscribe(\n      newHeroes => {this.heroes = newHeroes, console.log(newHeroes)}, \n      err => console.log(\"error updating heroes\", \n      () => console.log(\"done with updating heroes\")));\n\n  ngOnInit(): void {\n  // We created 1 hero in Service which is loaded before this component.  So we concat\n    this.heroService.getHeroes();\n  // Add the heroes we have statically coded here\n   this.heroService.addHeroes(this.heroes);  \n   console.log(\"initiate App comp\")        \n}\n\n  ngOnDestroy(): void {\n    console.log(\"destroyed app component\")\n}\n\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}