{"ast":null,"code":"import * as heroActions from '../app/heroes/Store/heroes.actions';\nimport Swal from 'sweetalert2';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngrx/store\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/material/form-field\";\nimport * as i5 from \"@angular/material/select\";\nimport * as i6 from \"@angular/material/core\";\nfunction AppComponent_ul_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ul\")(1, \"li\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const hero_r2 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(hero_r2.name);\n  }\n}\nfunction AppComponent_mat_option_16_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"mat-option\", 4);\n    i0.ɵɵlistener(\"click\", function AppComponent_mat_option_16_Template_mat_option_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r5);\n      const hero_r3 = restoredCtx.$implicit;\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.updateHero(hero_r3));\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const hero_r3 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", hero_r3.name, \" \");\n  }\n}\nexport class AppComponent {\n  constructor(store) {\n    this.store = store;\n    //heroes: Observable<fromHeroList.State>;\n    this.title = 'Data-Store';\n    this.heroes = [];\n    this.updateButtonDisabled = true;\n    console.log(\"app comp init\");\n  }\n  ngOnInit() {\n    this.subscription = this.store.select('heroList').subscribe({\n      next: Heroes => this.heroes = Heroes.Heroes,\n      error: err => console.log(err)\n    });\n    Swal.fire('Welcome to the Heroes Application Where We Test Out The Functionality of NgRX Store !');\n  }\n  /*UPDATE AN EXISTING HERO.  WE SET THE INDEX WE WISH TO UPDATE IN THE STORE HERE */\n  updateHero(hero) {\n    if (hero === null) {\n      this.updateButtonDisabled = true;\n    } else {\n      this.updateButtonDisabled = false;\n    }\n    this.store.dispatch(new heroActions.EditHeroStart(this.heroes.indexOf(hero)));\n  }\n  disableMe() {\n    this.updateButtonDisabled = true;\n  }\n  ngOnDestroy() {\n    console.log(\"destroyed app component\");\n    this.subscription.unsubscribe();\n  }\n}\nAppComponent.ɵfac = function AppComponent_Factory(t) {\n  return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.Store));\n};\nAppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AppComponent,\n  selectors: [[\"app-root\"]],\n  decls: 20,\n  vars: 3,\n  consts: [[4, \"ngFor\", \"ngForOf\"], [\"routerLink\", \"add\", 1, \"bg-success\"], [\"routerLink\", \"display\", 1, \"bg-danger\"], [\"appearance\", \"fill\", 1, \"default\"], [3, \"click\"], [3, \"click\", 4, \"ngFor\", \"ngForOf\"], [\"routerLink\", \"update\", 1, \"bg-warning\", 3, \"disabled\", \"click\"]],\n  template: function AppComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\")(1, \"h1\");\n      i0.ɵɵtext(2, \"HEROES\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(3, AppComponent_ul_3_Template, 3, 1, \"ul\", 0);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"div\")(5, \"button\", 1);\n      i0.ɵɵtext(6, \"add hero\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"button\", 2);\n      i0.ɵɵtext(8, \"heroes\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"div\")(10, \"mat-form-field\", 3)(11, \"mat-label\");\n      i0.ɵɵtext(12, \"Select a Hero to Edit\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"mat-select\")(14, \"mat-option\", 4);\n      i0.ɵɵlistener(\"click\", function AppComponent_Template_mat_option_click_14_listener() {\n        return ctx.updateHero(null);\n      });\n      i0.ɵɵtext(15, \"None\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(16, AppComponent_mat_option_16_Template, 2, 1, \"mat-option\", 5);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(17, \"button\", 6);\n      i0.ɵɵlistener(\"click\", function AppComponent_Template_button_click_17_listener() {\n        return ctx.disableMe();\n      });\n      i0.ɵɵtext(18, \"UPDATE\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelement(19, \"router-outlet\");\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngForOf\", ctx.heroes);\n      i0.ɵɵadvance(13);\n      i0.ɵɵproperty(\"ngForOf\", ctx.heroes);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"disabled\", ctx.updateButtonDisabled);\n    }\n  },\n  dependencies: [i2.NgForOf, i3.RouterOutlet, i3.RouterLink, i4.MatFormField, i4.MatLabel, i5.MatSelect, i6.MatOption],\n  styles: [\".default[_ngcontent-%COMP%]{\\n    height: 1rem;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxZQUFZO0FBQ2hCIiwic291cmNlc0NvbnRlbnQiOlsiLmRlZmF1bHR7XG4gICAgaGVpZ2h0OiAxcmVtO1xufSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":"AAMA,OAAO,KAAKA,WAAW,MAAM,oCAAoC;AACjE,OAAOC,IAAI,MAAM,aAAa;;;;;;;;;;ICL5BC,0BAAgC;IACxBA,YAAa;IAAAA,iBAAK;;;;IAAlBA,eAAa;IAAbA,kCAAa;;;;;;IAafA,qCAE8B;IAD5BA;MAAA;MAAA;MAAA;MAAA,OAASA,yCAAgB;IAAA,EAAC;IAExBA,YACJ;IAAAA,iBAAa;;;;IADTA,eACJ;IADIA,6CACJ;;;ADLR,OAAM,MAAOC,YAAY;EAEvBC,YAAqBC,KAAmC;IAAnC,UAAK,GAALA,KAAK;IAGxB;IACA,UAAK,GAAC,YAAY;IAElB,WAAM,GAAW,EAAE;IACnB,yBAAoB,GAAY,IAAI;IANzBC,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC;EAAA;EASzCC,QAAQ;IACL,IAAI,CAACC,YAAY,GAAI,IAAI,CAACJ,KAAK,CAACK,MAAM,CAAC,UAAU,CAAC,CAACC,SAAS,CAC7D;MACEC,IAAI,EAAGC,MAAM,IAAK,IAAI,CAACC,MAAM,GAAGD,MAAM,CAACA,MAAM;MAC7CE,KAAK,EAAGC,GAAG,IAAMV,OAAO,CAACC,GAAG,CAACS,GAAG;KACjC,CACD;IAEDf,IAAI,CAACgB,IAAI,CAAC,uFAAuF,CAAC;EACnG;EAEA;EACAC,UAAU,CAACC,IAAU;IACnB,IAAIA,IAAI,KAAK,IAAI,EAAE;MACjB,IAAI,CAACC,oBAAoB,GAAG,IAAI;KACjC,MAAM;MACL,IAAI,CAACA,oBAAoB,GAAG,KAAK;;IAEnC,IAAI,CAACf,KAAK,CAACgB,QAAQ,CAAC,IAAIrB,WAAW,CAACsB,aAAa,CAAC,IAAI,CAACR,MAAM,CAACS,OAAO,CAACJ,IAAI,CAAC,CAAC,CAAC;EAC/E;EAEAK,SAAS;IACP,IAAI,CAACJ,oBAAoB,GAAC,IAAI;EAChC;EACAK,WAAW;IACTnB,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAC;IACtC,IAAI,CAACE,YAAY,CAACiB,WAAW,EAAE;EACnC;;AAvCavB,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;QAAZA,YAAY;EAAAwB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCfzB7B,2BAAK;MACCA,sBAAM;MAAAA,iBAAK;MACfA,2DAEK;MACPA,iBAAM;MACLA,2BAAK;MAC0CA,wBAAQ;MAAAA,iBAAS;MAC7DA,iCAA+C;MAAAA,sBAAM;MAAAA,iBAAS;MAG9DA,2BAAK;MAEQA,sCAAqB;MAAAA,iBAAY;MAC5CA,mCAAa;MACCA;QAAA,OAAS8B,eAAW,IAAI,CAAC;MAAA,EAAC;MAAC9B,qBAAI;MAAAA,iBAAa;MACxDA,6EAIa;MACfA,iBAAa;MAEdA,kCAAuG;MAAtBA;QAAA,OAAS8B,eAAW;MAAA,EAAC;MAAC9B,uBAAM;MAAAA,iBAAS;MAI3HA,iCAA+B;;;MAzBRA,eAAS;MAATA,oCAAS;MAgBLA,gBAAS;MAATA,oCAAS;MAKJA,eAAiC;MAAjCA,mDAAiC","names":["heroActions","Swal","i0","AppComponent","constructor","store","console","log","ngOnInit","subscription","select","subscribe","next","Heroes","heroes","error","err","fire","updateHero","hero","updateButtonDisabled","dispatch","EditHeroStart","indexOf","disableMe","ngOnDestroy","unsubscribe","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\jacob\\Desktop\\developmentProjects\\angularTest\\data-store\\src\\app\\app.component.ts","C:\\Users\\jacob\\Desktop\\developmentProjects\\angularTest\\data-store\\src\\app\\app.component.html"],"sourcesContent":["import { Component, OnDestroy, OnInit } from '@angular/core';\nimport {Hero} from '../app/Models/hero'\nimport { Observable, Subscription } from 'rxjs';\nimport { Store } from '@ngrx/store';\nimport {HeroesService} from '../app/service/heroes.service'\nimport * as fromHeroList from '../app/heroes/Store/heroes.reducer'\nimport * as heroActions from '../app/heroes/Store/heroes.actions'\nimport Swal from 'sweetalert2'\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\nexport class AppComponent implements OnInit, OnDestroy {\n\n  constructor( private store: Store<fromHeroList.AppState>)\n              {console.log(\"app comp init\")}\n  \n    //heroes: Observable<fromHeroList.State>;\n    title='Data-Store'\n    subscription: Subscription;\n    heroes: Hero[] = [];\n    updateButtonDisabled: boolean = true;\n  \n\n  ngOnInit(): void {\n     this.subscription =  this.store.select('heroList').subscribe(\n    {\n      next: (Heroes) => this.heroes = Heroes.Heroes,\n      error: (err)  => console.log(err) \n    }\n   )\n\n   Swal.fire('Welcome to the Heroes Application Where We Test Out The Functionality of NgRX Store !')\n  }\n\n  /*UPDATE AN EXISTING HERO.  WE SET THE INDEX WE WISH TO UPDATE IN THE STORE HERE */\n  updateHero(hero: Hero){\n    if (hero === null) {\n      this.updateButtonDisabled = true;\n    } else {\n      this.updateButtonDisabled = false\n    }\n    this.store.dispatch(new heroActions.EditHeroStart(this.heroes.indexOf(hero)))\n  }\n\n  disableMe(){\n    this.updateButtonDisabled=true;\n  }\n  ngOnDestroy(): void {\n    console.log(\"destroyed app component\")\n    this.subscription.unsubscribe()\n}\n\n\n}\n","<div>\n  <h1>HEROES</h1>\n  <ul *ngFor=\"let hero of heroes\">\n      <li>{{hero.name}}</li>\n  </ul>\n</div>\n <div>\n    <button class=\"bg-success\" routerLink=\"add\">add hero</button>\n    <button class=\"bg-danger\" routerLink=\"display\">heroes</button>\n\n\n    <div>\n      <mat-form-field appearance=\"fill\" class=\"default\">\n      <mat-label>Select a Hero to Edit</mat-label>\n      <mat-select >\n        <mat-option (click)=\"updateHero(null)\">None</mat-option>\n        <mat-option  \n          (click)=\"updateHero(hero)\"\n          *ngFor=\"let hero of heroes\">\n            {{hero.name}}\n        </mat-option>\n      </mat-select>\n     </mat-form-field>\n     <button class=\"bg-warning\" [disabled]=\"updateButtonDisabled\" routerLink=\"update\" (click)=\"disableMe()\">UPDATE</button>\n    </div>\n    \n </div>\n<router-outlet></router-outlet>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}