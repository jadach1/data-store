{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../../service/heroes.service\";\nimport * as i2 from \"@angular/common\";\nfunction DisplayComponent_ul_3_ul_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ul\")(1, \"li\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const skill_r3 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(skill_r3);\n  }\n}\nfunction DisplayComponent_ul_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ul\")(1, \"ul\")(2, \"li\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(4, DisplayComponent_ul_3_ul_4_Template, 3, 1, \"ul\", 0);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const hero_r1 = ctx.$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate3(\"\", hero_r1.name, \" , \", hero_r1.height, \", \", hero_r1.origin, \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", hero_r1.skills);\n  }\n}\nexport class DisplayComponent {\n  constructor(heroService) {\n    this.heroService = heroService;\n    this.heroes = [];\n    this.status = this.heroService.status.subscribe(string => alert(\"display:: \" + string));\n    this.subscription = this.heroService.heroesUpdated.subscribe(newHeroes => this.heroes = this.heroes.concat(newHeroes), err => console.log(\"error updating heroes\", () => console.log(\"done with updating heroes\")));\n    console.log(\"display comp init\");\n  }\n  ngOnInit() {\n    // We created 1 hero in Service which is loaded before this component.  So we concat\n    this.heroService.getHeroes();\n    // Add the heroes we have statically coded here\n    this.heroService.addHeroes(this.heroes);\n  }\n  ngOnDestroy() {\n    console.log(\"destroyed display component\");\n  }\n}\nDisplayComponent.ɵfac = function DisplayComponent_Factory(t) {\n  return new (t || DisplayComponent)(i0.ɵɵdirectiveInject(i1.HeroesService));\n};\nDisplayComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: DisplayComponent,\n  selectors: [[\"app-display\"]],\n  decls: 4,\n  vars: 1,\n  consts: [[4, \"ngFor\", \"ngForOf\"]],\n  template: function DisplayComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\")(1, \"h1\");\n      i0.ɵɵtext(2, \"HEROES 23\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(3, DisplayComponent_ul_3_Template, 5, 4, \"ul\", 0);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngForOf\", ctx.heroes);\n    }\n  },\n  dependencies: [i2.NgForOf],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;IAKQA,0BAAsC;IAC9BA,YAAS;IAAAA,iBAAK;;;;IAAdA,eAAS;IAATA,8BAAS;;;;;IAJrBA,0BAAgC;IAExBA,YAAgD;IAAAA,iBAAK;IACzDA,oEAEK;IACPA,iBAAK;;;;IAJCA,eAAgD;IAAhDA,wFAAgD;IAC9BA,eAAc;IAAdA,wCAAc;;;ACK5C,OAAM,MAAOC,gBAAgB;EAC3BC,YAAoBC,WAA0B;IAA1B,gBAAW,GAAXA,WAAW;IAE/B,WAAM,GAAW,EAAE;IAarB,WAAM,GAAiB,IAAI,CAACA,WAAW,CAACC,MAAM,CAACC,SAAS,CAAEC,MAAM,IAAIC,KAAK,CAAC,YAAY,GAAGD,MAAM,CAAC,CAAC;IACjG,iBAAY,GAAiB,IAAI,CAACH,WAAW,CAACK,aAAa,CAACH,SAAS,CACrEI,SAAS,IAAI,IAAI,CAACC,MAAM,GAAG,IAAI,CAACA,MAAM,CAACC,MAAM,CAACF,SAAS,CAAC,EACxDG,GAAG,IAAIC,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAC1C,MAAMD,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC,CAAC,CAAC;IAnBED,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC;EAAA;EAIlFC,QAAQ;IACN;IACC,IAAI,CAACZ,WAAW,CAACa,SAAS,EAAE;IAC7B;IACC,IAAI,CAACb,WAAW,CAACc,SAAS,CAAC,IAAI,CAACP,MAAM,CAAC;EAC1C;EAEAQ,WAAW;IACXL,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC;EAC1C;;AAdab,gBAAgB;mBAAhBA,gBAAgB;AAAA;AAAhBA,gBAAgB;QAAhBA,gBAAgB;EAAAkB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDV7BvB,2BAAK;MACGA,yBAAS;MAAAA,iBAAK;MAClBA,+DAOK;MACPA,iBAAM;;;MARiBA,eAAS;MAATA,oCAAS","names":["i0","DisplayComponent","constructor","heroService","status","subscribe","string","alert","heroesUpdated","newHeroes","heroes","concat","err","console","log","ngOnInit","getHeroes","addHeroes","ngOnDestroy","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\jacob\\Desktop\\developmentProjects\\angularTest\\data-store\\src\\app\\heroes\\display\\display.component.html","C:\\Users\\jacob\\Desktop\\developmentProjects\\angularTest\\data-store\\src\\app\\heroes\\display\\display.component.ts"],"sourcesContent":["<div>\n    <h1>HEROES 23</h1>\n    <ul *ngFor=\"let hero of heroes\">\n      <ul>\n        <li>{{hero.name}} , {{hero.height}}, {{hero.origin}}</li>\n        <ul *ngFor=\"let skill of hero.skills\">\n            <li>{{skill}}</li>\n        </ul>\n      </ul>\n    </ul>\n  </div>\n","import { Component } from '@angular/core';\nimport {Hero} from '../../Models/hero'\nimport { Subscription } from 'rxjs';\nimport { HeroesService } from '../../service/heroes.service'\n\n@Component({\n  selector: 'app-display',\n  templateUrl: './display.component.html',\n  styleUrls: ['./display.component.css']\n})\nexport class DisplayComponent {\n  constructor(private heroService: HeroesService){console.log(\"display comp init\")}\n\n  heroes: Hero[] = [];\n\nngOnInit(): void {\n  // We created 1 hero in Service which is loaded before this component.  So we concat\n   this.heroService.getHeroes();\n  // Add the heroes we have statically coded here\n   this.heroService.addHeroes(this.heroes);          \n}\n\nngOnDestroy(): void {\nconsole.log(\"destroyed display component\")\n}\n\nstatus: Subscription = this.heroService.status.subscribe( string => alert(\"display:: \" + string))\nsubscription: Subscription = this.heroService.heroesUpdated.subscribe(\nnewHeroes => this.heroes = this.heroes.concat(newHeroes), \nerr => console.log(\"error updating heroes\", \n() => console.log(\"done with updating heroes\")));\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}