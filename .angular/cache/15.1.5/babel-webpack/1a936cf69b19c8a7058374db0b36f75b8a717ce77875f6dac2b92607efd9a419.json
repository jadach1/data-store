{"ast":null,"code":"import { FormGroup, FormControl, FormArray, Validators } from '@angular/forms';\nimport { Hero } from '../../Models/hero';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngrx/store\";\nimport * as i2 from \"../../service/heroes.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/router\";\nimport * as i5 from \"@angular/forms\";\nfunction HeroesComponent_div_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 8);\n    i0.ɵɵelement(1, \"input\", 9);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const i_r2 = ctx.index;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formControlName\", i_r2);\n  }\n}\nexport class HeroesComponent {\n  constructor(store, hs) {\n    this.store = store;\n    this.hs = hs;\n    this.hero = new Hero();\n    this.newHeroForm = new FormGroup({\n      name: new FormControl(null, [Validators.required]),\n      height: new FormControl(null, [Validators.required]),\n      origin: new FormControl(null, [Validators.required]),\n      skills: new FormArray([], [Validators.required])\n    });\n  }\n  onAddSkill() {\n    const control = new FormControl(null);\n    this.newHeroForm.get('skills').push(control);\n  }\n  onSubmit() {\n    if (this.newHeroForm.valid) {\n      let form = this.newHeroForm.value;\n      let hero = new Hero(form.name, form.height, form.origin, form.skills);\n      console.log(hero);\n      //this.store.dispatch(new heroActions.AddHero(hero))\n      this.hs.addHero(hero);\n      this.newHeroForm.reset();\n    }\n  }\n}\nHeroesComponent.ɵfac = function HeroesComponent_Factory(t) {\n  return new (t || HeroesComponent)(i0.ɵɵdirectiveInject(i1.Store), i0.ɵɵdirectiveInject(i2.HeroesService));\n};\nHeroesComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: HeroesComponent,\n  selectors: [[\"app-heroes\"]],\n  decls: 28,\n  vars: 2,\n  consts: [[\"routerLink\", \"/display\"], [3, \"formGroup\", \"ngSubmit\"], [\"formControlName\", \"name\"], [\"formControlName\", \"height\"], [\"formControlName\", \"origin\"], [\"formArrayName\", \"skills\"], [\"type\", \"button\", 1, \"btn\", \"btn-default\", 3, \"click\"], [\"class\", \"form-group\", 4, \"ngFor\", \"ngForOf\"], [1, \"form-group\"], [\"type\", \"text\", 3, \"formControlName\"]],\n  template: function HeroesComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p\");\n      i0.ɵɵtext(1, \"heroes works!!\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"div\")(3, \"div\")(4, \"button\", 0);\n      i0.ɵɵtext(5, \"display\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(6, \"div\")(7, \"form\", 1);\n      i0.ɵɵlistener(\"ngSubmit\", function HeroesComponent_Template_form_ngSubmit_7_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(8, \"div\")(9, \"label\");\n      i0.ɵɵtext(10, \"Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(11, \"input\", 2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"div\")(13, \"label\");\n      i0.ɵɵtext(14, \"Height\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(15, \"input\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"div\")(17, \"label\");\n      i0.ɵɵtext(18, \"Origin\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(19, \"input\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(20, \"div\", 5)(21, \"label\");\n      i0.ɵɵtext(22, \"Skills\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(23, \"button\", 6);\n      i0.ɵɵlistener(\"click\", function HeroesComponent_Template_button_click_23_listener() {\n        return ctx.onAddSkill();\n      });\n      i0.ɵɵtext(24, \"Add Skill\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(25, HeroesComponent_div_25_Template, 2, 1, \"div\", 7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(26, \"button\");\n      i0.ɵɵtext(27, \"Submit\");\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"formGroup\", ctx.newHeroForm);\n      i0.ɵɵadvance(18);\n      i0.ɵɵproperty(\"ngForOf\", ctx.newHeroForm.get(\"skills\").value);\n    }\n  },\n  dependencies: [i3.NgForOf, i4.RouterLink, i5.ɵNgNoValidate, i5.DefaultValueAccessor, i5.NgControlStatus, i5.NgControlStatusGroup, i5.FormGroupDirective, i5.FormControlName, i5.FormArrayName],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AACA,SAAQA,SAAS,EAAEC,WAAW,EAAEC,SAAS,EAAEC,UAAU,QAAO,gBAAgB;AAG5E,SAAQC,IAAI,QAAO,mBAAmB;;;;;;;;;ICkBtBC,8BACkF;IAC9EA,2BAAyC;IAC7CA,iBAAM;;;;IADiBA,eAAqB;IAArBA,sCAAqB;;;ADZ5D,OAAM,MAAOC,eAAe;EAK1BC,YAAoBC,KAAmC,EACnCC,EAAiB;IADjB,UAAK,GAALD,KAAK;IACL,OAAE,GAAFC,EAAE;IAEpB,IAAI,CAACC,IAAI,GAAG,IAAIN,IAAI,EAAE;IAEtB,IAAI,CAACO,WAAW,GAAG,IAAIX,SAAS,CAC9B;MAACY,IAAI,EAAE,IAAIX,WAAW,CAAC,IAAI,EAAE,CAACE,UAAU,CAACU,QAAQ,CAAC,CAAC;MAClDC,MAAM,EAAE,IAAIb,WAAW,CAAC,IAAI,EAAE,CAACE,UAAU,CAACU,QAAQ,CAAC,CAAC;MACpDE,MAAM,EAAE,IAAId,WAAW,CAAC,IAAI,EAAE,CAACE,UAAU,CAACU,QAAQ,CAAC,CAAC;MACpDG,MAAM,EAAE,IAAId,SAAS,CAAC,EAAE,EAAC,CAACC,UAAU,CAACU,QAAQ,CAAC;IAAC,CAAC,CAClD;EACH;EAEAI,UAAU;IACR,MAAMC,OAAO,GAAG,IAAIjB,WAAW,CAAC,IAAI,CAAC;IACzB,IAAI,CAACU,WAAW,CAACQ,GAAG,CAAC,QAAQ,CAAE,CAACC,IAAI,CAACF,OAAO,CAAC;EAC3D;EAEAG,QAAQ;IACN,IAAG,IAAI,CAACV,WAAW,CAACW,KAAK,EAAC;MACxB,IAAIC,IAAI,GAAG,IAAI,CAACZ,WAAW,CAACa,KAAK;MACjC,IAAId,IAAI,GAAG,IAAIN,IAAI,CAAEmB,IAAI,CAACX,IAAI,EAAEW,IAAI,CAACT,MAAM,EAAES,IAAI,CAACR,MAAM,EAAEQ,IAAI,CAACP,MAAM,CAAC;MACtES,OAAO,CAACC,GAAG,CAAChB,IAAI,CAAC;MACjB;MACA,IAAI,CAACD,EAAE,CAACkB,OAAO,CAACjB,IAAI,CAAC;MACrB,IAAI,CAACC,WAAW,CAACiB,KAAK,EAAE;;EAE5B;;AAhCWtB,eAAe;mBAAfA,eAAe;AAAA;AAAfA,eAAe;QAAfA,eAAe;EAAAuB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCZ5B5B,yBAAG;MAAAA,8BAAc;MAAAA,iBAAI;MACrBA,2BAAK;MAEiCA,uBAAO;MAAAA,iBAAS;MAElDA,2BAAK;MAC+BA;QAAA,OAAY6B,cAAU;MAAA,EAAC;MACnD7B,2BAAK;MACMA,qBAAI;MAAAA,iBAAQ;MACnBA,4BAA8B;MAClCA,iBAAM;MACNA,4BAAK;MACMA,uBAAM;MAAAA,iBAAQ;MACrBA,4BAAiC;MACrCA,iBAAM;MACNA,4BAAK;MACMA,uBAAM;MAAAA,iBAAQ;MACrBA,4BAAgC;MACpCA,iBAAM;MACNA,+BAA4B;MACjBA,uBAAM;MAAAA,iBAAQ;MACrBA,kCAAqE;MAAvBA;QAAA,OAAS6B,gBAAY;MAAA,EAAC;MAAC7B,0BAAS;MAAAA,iBAAS;MACvFA,kEAGM;MACVA,iBAAM;MACNA,+BAAQ;MAAAA,uBAAM;MAAAA,iBAAS;;;MArBrBA,eAAyB;MAAzBA,2CAAyB;MAiBQA,gBAAoC;MAApCA,6DAAoC","names":["FormGroup","FormControl","FormArray","Validators","Hero","i0","HeroesComponent","constructor","store","hs","hero","newHeroForm","name","required","height","origin","skills","onAddSkill","control","get","push","onSubmit","valid","form","value","console","log","addHero","reset","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\jacob\\Desktop\\developmentProjects\\angularTest\\data-store\\src\\app\\heroes\\heroes\\heroes.component.ts","C:\\Users\\jacob\\Desktop\\developmentProjects\\angularTest\\data-store\\src\\app\\heroes\\heroes\\heroes.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport {FormGroup, FormControl, FormArray, Validators} from '@angular/forms'\nimport { Store } from '@ngrx/store';\nimport {HeroesService} from '../../service/heroes.service'\nimport {Hero} from '../../Models/hero'\nimport * as fromHeroList from '../Store/heroes.reducer'\n\n@Component({\n  selector: 'app-heroes',\n  templateUrl: './heroes.component.html',\n  styleUrls: ['./heroes.component.css']\n})\nexport class HeroesComponent {\n  \n  hero: Hero;\n  newHeroForm: FormGroup;\n\n  constructor(private store: Store<fromHeroList.AppState>,\n              private hs: HeroesService) {\n    \n    this.hero = new Hero();\n\n    this.newHeroForm = new FormGroup(\n      {name: new FormControl(null, [Validators.required]),\n       height: new FormControl(null, [Validators.required]),\n       origin: new FormControl(null, [Validators.required]),\n       skills: new FormArray([],[Validators.required])}\n    )\n  }\n\n  onAddSkill(){\n    const control = new FormControl(null);\n    (<FormArray>this.newHeroForm.get('skills')).push(control);\n  }\n\n  onSubmit(){\n    if(this.newHeroForm.valid){\n      let form = this.newHeroForm.value;\n      let hero = new Hero( form.name, form.height, form.origin, form.skills)\n      console.log(hero)\n      //this.store.dispatch(new heroActions.AddHero(hero))\n      this.hs.addHero(hero)\n      this.newHeroForm.reset();\n    }\n  }\n\n}\n","<p>heroes works!!</p>\n<div>\n    <div>\n        <button routerLink=\"/display\">display</button>\n    </div>\n    <div>\n        <form [formGroup]=\"newHeroForm\" (ngSubmit)=\"onSubmit()\">\n            <div>\n                <label>Name</label>\n                <input formControlName=\"name\">\n            </div>\n            <div>\n                <label>Height</label>\n                <input formControlName=\"height\" >\n            </div>\n            <div>\n                <label>Origin</label>\n                <input formControlName=\"origin\">\n            </div>\n            <div formArrayName=\"skills\">\n                <label>Skills</label>\n                <button class=\"btn btn-default\" type=\"button\" (click)=\"onAddSkill()\">Add Skill</button>\n                <div class=\"form-group\"\n                      *ngFor=\"let skillControl of newHeroForm.get('skills').value; let i = index\">\n                    <input type=\"text\" [formControlName]=\"i\">    \n                </div>\n            </div>\n            <button>Submit</button>\n        </form>\n    </div> \n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}