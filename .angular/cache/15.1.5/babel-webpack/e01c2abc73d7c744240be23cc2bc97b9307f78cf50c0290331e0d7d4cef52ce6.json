{"ast":null,"code":"import { Hero } from '../../Models/hero';\nimport * as HeroActions from '../Store/heroes.actions';\nconst initialState = {\n  Heroes: [new Hero('Maneesh', '198', 'India', ['technical analysis', 'extreme focus']), new Hero('Xin', '176', 'China', ['Power', 'Geometry'])],\n  editedHero: null,\n  editedHeroIndex: -1\n};\nexport function heroesReducer(state = initialState, action) {\n  switch (action.type) {\n    case HeroActions.ADD_HERO:\n      //state changes must be immutable, return a new object\n      return {\n        ...state,\n        Heroes: [...state.Heroes, action.payload]\n      };\n    case HeroActions.ADD_HEROES:\n      return {\n        ...state,\n        Heroes: [...state.Heroes, ...action.payload]\n      };\n    case HeroActions.UPDATE_HERO:\n      const hero = state.Heroes[action.payload.index];\n      const updatedHero = {\n        ...hero,\n        ...action.payload.hero\n      };\n      const updatedHeroes = [...state.Heroes];\n      console.log(\"updated hero\");\n      console.log(updatedHero);\n      updatedHeroes[action.payload.index] = updatedHero;\n      return {\n        ...state,\n        updatedHeroes\n      };\n    case HeroActions.EDIT_START:\n      const index = action.payload;\n      state.editedHeroIndex = index;\n      console.log(state);\n      return {\n        ...state\n      };\n    case HeroActions.DELETE_HERO:\n      return {\n        ...state,\n        Heroes: state.Heroes.filter((hero, index) => {\n          return index !== action.payload;\n        })\n      };\n    default:\n      return state;\n  }\n}","map":{"version":3,"mappings":"AAAA,SAAQA,IAAI,QAAO,mBAAmB;AAEtC,OAAO,KAAKC,WAAW,MAAM,yBAAyB;AAYtD,MAAMC,YAAY,GAAW;EACzBC,MAAM,EAAE,CACI,IAAIH,IAAI,CAAC,SAAS,EAAC,KAAK,EAAC,OAAO,EAAC,CAAC,oBAAoB,EAAC,eAAe,CAAC,CAAC,EACxE,IAAIA,IAAI,CAAC,KAAK,EAAC,KAAK,EAAC,OAAO,EAAC,CAAC,OAAO,EAAC,UAAU,CAAC,CAAC,CACrD;EACTI,UAAU,EAAE,IAAI;EAChBC,eAAe,EAAE,CAAC;CACrB;AAGD,OAAM,SAAUC,aAAa,CAACC,QAAeL,YAAY,EAC3BM,MAA+B;EAGzD,QAAQA,MAAM,CAACC,IAAI;IAEf,KAAKR,WAAW,CAACS,QAAQ;MACpB;MACD,OAAO;QACH,GAAGH,KAAK;QACRJ,MAAM,EAAE,CAAC,GAAGI,KAAK,CAACJ,MAAM,EAAEK,MAAM,CAACG,OAAO;OAC3C;IAEL,KAAKV,WAAW,CAACW,UAAU;MACvB,OAAO;QACH,GAAGL,KAAK;QAAEJ,MAAM,EAAE,CAAC,GAAGI,KAAK,CAACJ,MAAM,EAAE,GAAIK,MAAM,CAACG,OAAkB;OACpE;IAEL,KAAKV,WAAW,CAACY,WAAW;MACxB,MAAMC,IAAI,GAAGP,KAAK,CAACJ,MAAM,CAACK,MAAM,CAACG,OAAO,CAACI,KAAK,CAAC;MAC/C,MAAMC,WAAW,GAAG;QAChB,GAAGF,IAAI;QACP,GAAGN,MAAM,CAACG,OAAO,CAACG;OACrB;MACD,MAAMG,aAAa,GAAG,CAAC,GAAGV,KAAK,CAACJ,MAAM,CAAC;MAEvCe,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC;MAC3BD,OAAO,CAACC,GAAG,CAACH,WAAW,CAAC;MACxBC,aAAa,CAACT,MAAM,CAACG,OAAO,CAACI,KAAK,CAAC,GAAGC,WAAW;MAEjD,OAAO;QACH,GAAGT,KAAK;QAAEU;OACb;IAEL,KAAKhB,WAAW,CAACmB,UAAU;MACxB,MAAML,KAAK,GAAGP,MAAM,CAACG,OAAO;MAC5BJ,KAAK,CAACF,eAAe,GAAGU,KAAK;MAC7BG,OAAO,CAACC,GAAG,CAACZ,KAAK,CAAC;MACjB,OAAO;QAAE,GAAGA;MAAK,CAAC;IAEtB,KAAKN,WAAW,CAACoB,WAAW;MACxB,OAAO;QACH,GAAGd,KAAK;QACTJ,MAAM,EAAEI,KAAK,CAACJ,MAAM,CAACmB,MAAM,CAAC,CAACR,IAAI,EAAEC,KAAK,KAAI;UAC3C,OAAOA,KAAK,KAAKP,MAAM,CAACG,OAAO;QAChC,CAAC;OACH;IACJ;MACG,OAAOJ,KAAK;EAAA;AAGxB","names":["Hero","HeroActions","initialState","Heroes","editedHero","editedHeroIndex","heroesReducer","state","action","type","ADD_HERO","payload","ADD_HEROES","UPDATE_HERO","hero","index","updatedHero","updatedHeroes","console","log","EDIT_START","DELETE_HERO","filter"],"sourceRoot":"","sources":["C:\\Users\\jacob\\Desktop\\developmentProjects\\angularTest\\data-store\\src\\app\\heroes\\Store\\heroes.reducer.ts"],"sourcesContent":["import {Hero} from '../../Models/hero'\n\nimport * as HeroActions from '../Store/heroes.actions'\n\nexport interface AppState{\n    heroList: State;\n}\n\nexport interface State{\n    Heroes: Hero[];\n    editedHero: Hero;\n    editedHeroIndex: number;\n}\n\nconst initialState: State  = {\n    Heroes: [\n                new Hero('Maneesh','198','India',['technical analysis','extreme focus']),\n                new Hero('Xin','176','China',['Power','Geometry'])\n            ],\n    editedHero: null,\n    editedHeroIndex: -1,\n}\n\n\nexport function heroesReducer(state: State = initialState, \n                              action: HeroActions.HeroActions) \n{\n\n    switch (action.type) {\n\n        case HeroActions.ADD_HERO:\n             //state changes must be immutable, return a new object\n            return {\n                ...state,\n                Heroes: [...state.Heroes, action.payload]\n            }\n\n        case HeroActions.ADD_HEROES:\n            return {\n                ...state, Heroes: [...state.Heroes, ...(action.payload as Hero[])]\n            }\n\n        case HeroActions.UPDATE_HERO:\n            const hero = state.Heroes[action.payload.index];\n            const updatedHero = {\n                ...hero,\n                ...action.payload.hero\n            }\n            const updatedHeroes = [...state.Heroes];\n            \n            console.log(\"updated hero\")\n            console.log(updatedHero)\n            updatedHeroes[action.payload.index] = updatedHero;\n\n            return {\n                ...state, updatedHeroes\n            }\n\n        case HeroActions.EDIT_START:\n           const index = action.payload;\n           state.editedHeroIndex = index;\n           console.log(state)\n            return { ...state}\n\n        case HeroActions.DELETE_HERO:\n            return {\n                ...state,\n               Heroes: state.Heroes.filter((hero, index) => {\n                return index !== action.payload;\n               })\n            }\n         default :\n            return state\n                \n    }\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}