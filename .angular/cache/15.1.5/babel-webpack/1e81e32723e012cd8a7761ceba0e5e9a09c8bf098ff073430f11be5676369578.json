{"ast":null,"code":"import { FormGroup, FormControl } from '@angular/forms';\nimport { Hero } from '../../Models/hero';\nimport * as heroActions from '../Store/heroes.actions';\nimport Swal from 'sweetalert2';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngrx/store\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nexport class UpdateHeroComponent {\n  constructor(store, route) {\n    this.store = store;\n    this.route = route;\n    this.index = -1;\n  }\n  ngOnInit() {\n    this.store.select('heroList').subscribe({\n      next: heroState => {\n        this.heroState = heroState, this.setUpForm(), this.index = heroState.editedHeroIndex;\n      },\n      error: error => console.log(error)\n    });\n    this.route.params.subscribe({\n      next: params => {\n        console.log(\"inside params\"), console.log(params);\n      },\n      error: err => console.log(\"no params found\"),\n      complete: () => Swal.clickConfirm()\n    });\n  }\n  setUpForm() {\n    this.editedHero = this.heroState.Heroes[this.heroState.editedHeroIndex];\n    this.updateHeroForm = new FormGroup({\n      'edit_name': new FormControl(this.editedHero.name),\n      'edit_height': new FormControl(this.editedHero.height),\n      'edit_origin': new FormControl(this.editedHero.origin)\n    });\n  }\n  onSubmit() {\n    let controls = this.updateHeroForm;\n    let newHero = new Hero(controls.value['edit_name'], controls.value['edit_height'], controls.value['edit_origin'], this.editedHero.skills);\n    console.log(newHero);\n    this.store.dispatch(new heroActions.UpdateHero({\n      index: this.index,\n      hero: newHero\n    }));\n    Swal.fire(\"Successfully Updated Hero \" + newHero.name);\n  }\n  ngOnDestroy() {\n    console.log(\"destryoing update hero component\");\n    this.store.dispatch(new heroActions.EditHeroFinish());\n  }\n}\nUpdateHeroComponent.ɵfac = function UpdateHeroComponent_Factory(t) {\n  return new (t || UpdateHeroComponent)(i0.ɵɵdirectiveInject(i1.Store), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n};\nUpdateHeroComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: UpdateHeroComponent,\n  selectors: [[\"app-update-hero\"]],\n  decls: 15,\n  vars: 1,\n  consts: [[3, \"formGroup\", \"ngSubmit\"], [\"for\", \"name\"], [\"type\", \"text\", \"formControlName\", \"edit_name\"], [\"for\", \"height\"], [\"type\", \"text\", \"formControlName\", \"edit_height\"], [\"for\", \"origin\"], [\"type\", \"text\", \"formControlName\", \"edit_origin\"]],\n  template: function UpdateHeroComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\", 0);\n      i0.ɵɵlistener(\"ngSubmit\", function UpdateHeroComponent_Template_form_ngSubmit_0_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(1, \"div\")(2, \"label\", 1);\n      i0.ɵɵtext(3, \"Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(4, \"input\", 2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"div\")(6, \"label\", 3);\n      i0.ɵɵtext(7, \"Height\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(8, \"input\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"div\")(10, \"label\", 5);\n      i0.ɵɵtext(11, \"Origin\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(12, \"input\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"button\");\n      i0.ɵɵtext(14, \"Make Changes\");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"formGroup\", ctx.updateHeroForm);\n    }\n  },\n  dependencies: [i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.FormControlName],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["FormGroup","FormControl","Hero","heroActions","Swal","UpdateHeroComponent","constructor","store","route","ngOnInit","select","subscribe","next","heroState","setUpForm","index","editedHeroIndex","error","console","log","params","err","complete","clickConfirm","editedHero","Heroes","updateHeroForm","name","height","origin","onSubmit","controls","newHero","value","skills","dispatch","UpdateHero","hero","fire","ngOnDestroy","EditHeroFinish","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\Users\\jacob\\Desktop\\developmentProjects\\angularTest\\data-store\\src\\app\\heroes\\update-hero\\update-hero.component.ts","C:\\Users\\jacob\\Desktop\\developmentProjects\\angularTest\\data-store\\src\\app\\heroes\\update-hero\\update-hero.component.html"],"sourcesContent":["import { Component, OnInit, OnDestroy} from '@angular/core';\nimport { FormGroup, FormArray, FormControl } from '@angular/forms';\nimport { Hero } from '../../Models/hero'\nimport { Store } from '@ngrx/store';\nimport { ActivatedRoute, Params } from '@angular/router';\nimport * as fromHeroList from '../Store/heroes.reducer'\nimport * as heroActions from '../Store/heroes.actions'\nimport Swal from 'sweetalert2';\n\n\n@Component({\n  selector: 'app-update-hero',\n  templateUrl: './update-hero.component.html',\n  styleUrls: ['./update-hero.component.css']\n})\nexport class UpdateHeroComponent implements OnInit, OnDestroy{\n    updateHeroForm: FormGroup;\n    heroState: fromHeroList.State;\n    editedHero:   Hero;\n    index: number = -1;\n\n    \n    constructor(private store: Store<fromHeroList.AppState>, private route: ActivatedRoute) {}\n\n  ngOnInit(): void {\n      this.store.select('heroList').subscribe({\n        next: (heroState) => {\n                              this.heroState = heroState,\n                              this.setUpForm(),\n                              this.index = heroState.editedHeroIndex\n                            },\n        error: (error) => console.log(error)\n      })\n    \n      this.route.params.subscribe( \n        {\n          next: (params: Params) => {console.log(\"inside params\"),console.log(params)},\n          error:  err             => console.log(\"no params found\"),\n          complete: ()            => Swal.clickConfirm()\n        }\n      )\n      \n        \n      \n  }\n\n  setUpForm() {\n      this.editedHero = this.heroState.Heroes[this.heroState.editedHeroIndex]\n      this.updateHeroForm = new FormGroup({\n        'edit_name' : new FormControl(this.editedHero.name),\n        'edit_height' : new FormControl(this.editedHero.height),\n        'edit_origin' : new FormControl(this.editedHero.origin)\n      })\n  }\n\n  onSubmit(){\n      let controls = this.updateHeroForm;\n      let newHero = new Hero(controls.value['edit_name'], \n                             controls.value['edit_height'], \n                             controls.value['edit_origin'], \n                             this.editedHero.skills)\n      console.log(newHero)\n      this.store.dispatch(new heroActions.UpdateHero({index: this.index,hero: newHero}))\n      Swal.fire(\"Successfully Updated Hero \" + newHero.name)\n    }\n\n    ngOnDestroy(){\n      console.log(\"destryoing update hero component\")\n      this.store.dispatch(new heroActions.EditHeroFinish())\n    }\n}\n","<form [formGroup]=\"updateHeroForm\" (ngSubmit)=\"onSubmit()\">\n    <div>\n        <label for=\"name\">Name</label>\n        <input type=\"text\" formControlName=\"edit_name\" >\n    </div>\n    <div>\n        <label for=\"height\">Height</label>\n        <input type=\"text\" formControlName=\"edit_height\">\n    </div>\n    <div>\n        <label for=\"origin\">Origin</label>\n        <input type=\"text\" formControlName=\"edit_origin\">\n    </div>\n    <button >Make Changes</button>\n</form>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}